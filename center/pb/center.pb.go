// Code generated by protoc-gen-go. DO NOT EDIT.
// source: center.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	center.proto

It has these top-level messages:
	Login
	Auth
	User
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Login struct {
}

func (m *Login) Reset()                    { *m = Login{} }
func (m *Login) String() string            { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()               {}
func (*Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Login_LoginReq struct {
	AppId    int32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *Login_LoginReq) Reset()                    { *m = Login_LoginReq{} }
func (m *Login_LoginReq) String() string            { return proto.CompactTextString(m) }
func (*Login_LoginReq) ProtoMessage()               {}
func (*Login_LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Login_LoginReq) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *Login_LoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Login_LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Login_LoginResp struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *Login_LoginResp) Reset()                    { *m = Login_LoginResp{} }
func (m *Login_LoginResp) String() string            { return proto.CompactTextString(m) }
func (*Login_LoginResp) ProtoMessage()               {}
func (*Login_LoginResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Login_LoginResp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Login_LogoutReq struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *Login_LogoutReq) Reset()                    { *m = Login_LogoutReq{} }
func (m *Login_LogoutReq) String() string            { return proto.CompactTextString(m) }
func (*Login_LogoutReq) ProtoMessage()               {}
func (*Login_LogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Login_LogoutReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Login_LogoutResp struct {
}

func (m *Login_LogoutResp) Reset()                    { *m = Login_LogoutResp{} }
func (m *Login_LogoutResp) String() string            { return proto.CompactTextString(m) }
func (*Login_LogoutResp) ProtoMessage()               {}
func (*Login_LogoutResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

type Auth struct {
}

func (m *Auth) Reset()                    { *m = Auth{} }
func (m *Auth) String() string            { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()               {}
func (*Auth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Auth_AuthReq struct {
	AppId int32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *Auth_AuthReq) Reset()                    { *m = Auth_AuthReq{} }
func (m *Auth_AuthReq) String() string            { return proto.CompactTextString(m) }
func (*Auth_AuthReq) ProtoMessage()               {}
func (*Auth_AuthReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Auth_AuthReq) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *Auth_AuthReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Auth_AuthResp struct {
	TokenInfo string `protobuf:"bytes,1,opt,name=tokenInfo" json:"tokenInfo,omitempty"`
}

func (m *Auth_AuthResp) Reset()                    { *m = Auth_AuthResp{} }
func (m *Auth_AuthResp) String() string            { return proto.CompactTextString(m) }
func (*Auth_AuthResp) ProtoMessage()               {}
func (*Auth_AuthResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Auth_AuthResp) GetTokenInfo() string {
	if m != nil {
		return m.TokenInfo
	}
	return ""
}

type User struct {
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type User_UserReq struct {
	Uid      int32  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (m *User_UserReq) Reset()                    { *m = User_UserReq{} }
func (m *User_UserReq) String() string            { return proto.CompactTextString(m) }
func (*User_UserReq) ProtoMessage()               {}
func (*User_UserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *User_UserReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *User_UserReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type User_UserResp struct {
	Uid      int32  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (m *User_UserResp) Reset()                    { *m = User_UserResp{} }
func (m *User_UserResp) String() string            { return proto.CompactTextString(m) }
func (*User_UserResp) ProtoMessage()               {}
func (*User_UserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *User_UserResp) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *User_UserResp) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type User_AddUserReq struct {
	AppId    int32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Salt     string `protobuf:"bytes,4,opt,name=salt" json:"salt,omitempty"`
}

func (m *User_AddUserReq) Reset()                    { *m = User_AddUserReq{} }
func (m *User_AddUserReq) String() string            { return proto.CompactTextString(m) }
func (*User_AddUserReq) ProtoMessage()               {}
func (*User_AddUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 2} }

func (m *User_AddUserReq) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *User_AddUserReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User_AddUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User_AddUserReq) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

type User_AddUserResp struct {
	Uid int32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *User_AddUserResp) Reset()                    { *m = User_AddUserResp{} }
func (m *User_AddUserResp) String() string            { return proto.CompactTextString(m) }
func (*User_AddUserResp) ProtoMessage()               {}
func (*User_AddUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 3} }

func (m *User_AddUserResp) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type User_UpdateUserReq struct {
	Uid      int32  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *User_UpdateUserReq) Reset()                    { *m = User_UpdateUserReq{} }
func (m *User_UpdateUserReq) String() string            { return proto.CompactTextString(m) }
func (*User_UpdateUserReq) ProtoMessage()               {}
func (*User_UpdateUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 4} }

func (m *User_UpdateUserReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *User_UpdateUserReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User_UpdateUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User_UpdateUserResp struct {
}

func (m *User_UpdateUserResp) Reset()                    { *m = User_UpdateUserResp{} }
func (m *User_UpdateUserResp) String() string            { return proto.CompactTextString(m) }
func (*User_UpdateUserResp) ProtoMessage()               {}
func (*User_UpdateUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 5} }

func init() {
	proto.RegisterType((*Login)(nil), "pb.Login")
	proto.RegisterType((*Login_LoginReq)(nil), "pb.Login.LoginReq")
	proto.RegisterType((*Login_LoginResp)(nil), "pb.Login.LoginResp")
	proto.RegisterType((*Login_LogoutReq)(nil), "pb.Login.LogoutReq")
	proto.RegisterType((*Login_LogoutResp)(nil), "pb.Login.LogoutResp")
	proto.RegisterType((*Auth)(nil), "pb.Auth")
	proto.RegisterType((*Auth_AuthReq)(nil), "pb.Auth.AuthReq")
	proto.RegisterType((*Auth_AuthResp)(nil), "pb.Auth.AuthResp")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*User_UserReq)(nil), "pb.User.UserReq")
	proto.RegisterType((*User_UserResp)(nil), "pb.User.UserResp")
	proto.RegisterType((*User_AddUserReq)(nil), "pb.User.AddUserReq")
	proto.RegisterType((*User_AddUserResp)(nil), "pb.User.AddUserResp")
	proto.RegisterType((*User_UpdateUserReq)(nil), "pb.User.UpdateUserReq")
	proto.RegisterType((*User_UpdateUserResp)(nil), "pb.User.UpdateUserResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for CenterService service

type CenterServiceClient interface {
	Login(ctx context.Context, in *Login_LoginReq, opts ...client.CallOption) (*Login_LoginResp, error)
	Logout(ctx context.Context, in *Login_LogoutReq, opts ...client.CallOption) (*Login_LogoutResp, error)
	Auth(ctx context.Context, in *Auth_AuthReq, opts ...client.CallOption) (*Auth_AuthResp, error)
	GetUser(ctx context.Context, in *User_UserReq, opts ...client.CallOption) (*User_UserResp, error)
	AddUser(ctx context.Context, in *User_AddUserReq, opts ...client.CallOption) (*User_AddUserResp, error)
	UpdateUser(ctx context.Context, in *User_UpdateUserReq, opts ...client.CallOption) (*User_UpdateUserResp, error)
}

type centerServiceClient struct {
	c           client.Client
	serviceName string
}

func NewCenterServiceClient(serviceName string, c client.Client) CenterServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "pb"
	}
	return &centerServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *centerServiceClient) Login(ctx context.Context, in *Login_LoginReq, opts ...client.CallOption) (*Login_LoginResp, error) {
	req := c.c.NewRequest(c.serviceName, "CenterService.Login", in)
	out := new(Login_LoginResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServiceClient) Logout(ctx context.Context, in *Login_LogoutReq, opts ...client.CallOption) (*Login_LogoutResp, error) {
	req := c.c.NewRequest(c.serviceName, "CenterService.Logout", in)
	out := new(Login_LogoutResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServiceClient) Auth(ctx context.Context, in *Auth_AuthReq, opts ...client.CallOption) (*Auth_AuthResp, error) {
	req := c.c.NewRequest(c.serviceName, "CenterService.Auth", in)
	out := new(Auth_AuthResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServiceClient) GetUser(ctx context.Context, in *User_UserReq, opts ...client.CallOption) (*User_UserResp, error) {
	req := c.c.NewRequest(c.serviceName, "CenterService.GetUser", in)
	out := new(User_UserResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServiceClient) AddUser(ctx context.Context, in *User_AddUserReq, opts ...client.CallOption) (*User_AddUserResp, error) {
	req := c.c.NewRequest(c.serviceName, "CenterService.AddUser", in)
	out := new(User_AddUserResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServiceClient) UpdateUser(ctx context.Context, in *User_UpdateUserReq, opts ...client.CallOption) (*User_UpdateUserResp, error) {
	req := c.c.NewRequest(c.serviceName, "CenterService.UpdateUser", in)
	out := new(User_UpdateUserResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CenterService service

type CenterServiceHandler interface {
	Login(context.Context, *Login_LoginReq, *Login_LoginResp) error
	Logout(context.Context, *Login_LogoutReq, *Login_LogoutResp) error
	Auth(context.Context, *Auth_AuthReq, *Auth_AuthResp) error
	GetUser(context.Context, *User_UserReq, *User_UserResp) error
	AddUser(context.Context, *User_AddUserReq, *User_AddUserResp) error
	UpdateUser(context.Context, *User_UpdateUserReq, *User_UpdateUserResp) error
}

func RegisterCenterServiceHandler(s server.Server, hdlr CenterServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&CenterService{hdlr}, opts...))
}

type CenterService struct {
	CenterServiceHandler
}

func (h *CenterService) Login(ctx context.Context, in *Login_LoginReq, out *Login_LoginResp) error {
	return h.CenterServiceHandler.Login(ctx, in, out)
}

func (h *CenterService) Logout(ctx context.Context, in *Login_LogoutReq, out *Login_LogoutResp) error {
	return h.CenterServiceHandler.Logout(ctx, in, out)
}

func (h *CenterService) Auth(ctx context.Context, in *Auth_AuthReq, out *Auth_AuthResp) error {
	return h.CenterServiceHandler.Auth(ctx, in, out)
}

func (h *CenterService) GetUser(ctx context.Context, in *User_UserReq, out *User_UserResp) error {
	return h.CenterServiceHandler.GetUser(ctx, in, out)
}

func (h *CenterService) AddUser(ctx context.Context, in *User_AddUserReq, out *User_AddUserResp) error {
	return h.CenterServiceHandler.AddUser(ctx, in, out)
}

func (h *CenterService) UpdateUser(ctx context.Context, in *User_UpdateUserReq, out *User_UpdateUserResp) error {
	return h.CenterServiceHandler.UpdateUser(ctx, in, out)
}

func init() { proto.RegisterFile("center.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x4f, 0xe3, 0x30,
	0x10, 0xdd, 0xa4, 0x49, 0x9b, 0xcc, 0xb6, 0xab, 0xae, 0xb7, 0xbb, 0x1b, 0x59, 0x48, 0x94, 0x9c,
	0x7a, 0x21, 0x42, 0x45, 0x7c, 0xdc, 0x50, 0xc5, 0x01, 0x55, 0xe2, 0x14, 0xd4, 0x43, 0x4f, 0x28,
	0x6d, 0x0c, 0xad, 0x80, 0xd8, 0xc4, 0x0e, 0xfc, 0x33, 0x7e, 0x09, 0x3f, 0x86, 0x23, 0xb2, 0x9d,
	0xaf, 0xd2, 0xaa, 0x12, 0x88, 0x53, 0xc6, 0x6f, 0xe6, 0xbd, 0x19, 0xcd, 0xbc, 0x40, 0x7b, 0x4e,
	0x12, 0x41, 0xd2, 0x80, 0xa5, 0x54, 0x50, 0x64, 0xb2, 0x99, 0xff, 0x62, 0x80, 0x7d, 0x49, 0x6f,
	0x97, 0x09, 0x9e, 0x82, 0xa3, 0x82, 0x90, 0x3c, 0xa2, 0xbf, 0xd0, 0x8c, 0x18, 0xbb, 0x5e, 0xc6,
	0x9e, 0xd1, 0x37, 0x06, 0x76, 0x68, 0x47, 0x8c, 0x8d, 0x63, 0x84, 0xc1, 0xc9, 0x38, 0x49, 0x93,
	0xe8, 0x81, 0x78, 0x66, 0xdf, 0x18, 0xb8, 0x61, 0xf9, 0x96, 0x39, 0x16, 0x71, 0xfe, 0x4c, 0xd3,
	0xd8, 0x6b, 0xe8, 0x5c, 0xf1, 0xc6, 0x7b, 0xe0, 0xe6, 0xd2, 0x9c, 0xa1, 0x1e, 0xd8, 0x82, 0xde,
	0x91, 0x44, 0x49, 0xbb, 0xa1, 0x7e, 0xe4, 0x25, 0x34, 0x13, 0xb2, 0xfd, 0xe6, 0x92, 0x36, 0x40,
	0x51, 0xc2, 0x99, 0xbf, 0x00, 0x6b, 0x94, 0x89, 0x05, 0x3e, 0x86, 0x96, 0xfc, 0x6e, 0x99, 0xba,
	0x54, 0x33, 0xeb, 0x6a, 0x03, 0x70, 0x34, 0x8f, 0x33, 0xb4, 0x03, 0xae, 0x02, 0xc7, 0xc9, 0x0d,
	0xcd, 0x7b, 0x56, 0x80, 0xff, 0x66, 0x82, 0x35, 0xe1, 0x24, 0xc5, 0x27, 0xd0, 0x92, 0x5f, 0xd9,
	0xaa, 0x0b, 0x8d, 0xac, 0xec, 0x23, 0xc3, 0x6d, 0xbb, 0xc1, 0xa7, 0xe0, 0x68, 0x22, 0x67, 0x9f,
	0x64, 0x52, 0x80, 0x51, 0x1c, 0x17, 0x5d, 0xbf, 0xf7, 0x2c, 0x08, 0x81, 0xc5, 0xa3, 0x7b, 0xe1,
	0x59, 0x0a, 0x57, 0x31, 0xde, 0x85, 0x9f, 0x65, 0xc3, 0x4d, 0xd3, 0xe2, 0x29, 0x74, 0x26, 0x2c,
	0x8e, 0x04, 0xf9, 0xd2, 0x2a, 0xb6, 0xda, 0xa4, 0x0b, 0xbf, 0xea, 0xd2, 0x9c, 0x0d, 0x5f, 0x4d,
	0xe8, 0x9c, 0x2b, 0xcb, 0x5e, 0x91, 0xf4, 0x69, 0x39, 0x27, 0x68, 0x98, 0xdb, 0x15, 0xa1, 0x80,
	0xcd, 0x02, 0x15, 0x06, 0x85, 0x6d, 0xf1, 0x9f, 0x35, 0x8c, 0x33, 0xff, 0x07, 0x3a, 0x82, 0xa6,
	0x36, 0x0e, 0x5a, 0x2d, 0xd0, 0x6e, 0xc3, 0xbd, 0x75, 0x50, 0xd1, 0xf6, 0xb5, 0xc3, 0x50, 0x57,
	0xe6, 0x65, 0x14, 0xe4, 0x46, 0xc3, 0xbf, 0x3f, 0x20, 0xaa, 0xfc, 0x00, 0x5a, 0x17, 0x44, 0xc8,
	0xd1, 0x35, 0x43, 0x46, 0x41, 0xbe, 0x24, 0xcd, 0xa8, 0x21, 0x8a, 0x21, 0xad, 0xab, 0x77, 0xad,
	0x07, 0x53, 0xf9, 0xea, 0xdc, 0x7a, 0xb0, 0x55, 0x50, 0xf1, 0xce, 0x00, 0xaa, 0x3d, 0xa1, 0x7f,
	0x95, 0x74, 0xfd, 0x2e, 0xf8, 0xff, 0x46, 0x5c, 0x0a, 0xcc, 0x9a, 0xea, 0xff, 0x3f, 0x7c, 0x0f,
	0x00, 0x00, 0xff, 0xff, 0x87, 0xbc, 0x54, 0x1b, 0x0f, 0x04, 0x00, 0x00,
}
